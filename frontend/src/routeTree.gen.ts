/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ServerImport } from './routes/server'
import { Route as OauthLoginImport } from './routes/oauth-login'
import { Route as LoginImport } from './routes/login'
import { Route as AppStoreImport } from './routes/app-store'
import { Route as AddUserImport } from './routes/add-user'
import { Route as RequireAuthImport } from './routes/_requireAuth'
import { Route as IndexImport } from './routes/index'
import { Route as RequireAuthPermissionsImport } from './routes/_requireAuth/permissions'
import { Route as RequireAuthDocsImport } from './routes/_requireAuth/docs'
import { Route as RequireAuthPriviTestIndexImport } from './routes/_requireAuth/privi-test/index'
import { Route as RequireAuthPermissionsIndexImport } from './routes/_requireAuth/permissions/index'
import { Route as RequireAuthDocsIndexImport } from './routes/_requireAuth/docs/index'
import { Route as RequireAuthPriviTestViewImport } from './routes/_requireAuth/privi-test/view'
import { Route as RequireAuthPermissionsPeopleImport } from './routes/_requireAuth/permissions/people'
import { Route as RequireAuthPermissionsLexiconsImport } from './routes/_requireAuth/permissions/lexicons'
import { Route as RequireAuthPermissionsLexiconsIndexImport } from './routes/_requireAuth/permissions/lexicons/index'
import { Route as RequireAuthPermissionsGroupsIndexImport } from './routes/_requireAuth/permissions/groups/index'
import { Route as RequireAuthPermissionsLexiconsLexiconIdImport } from './routes/_requireAuth/permissions/lexicons/$lexiconId'
import { Route as RequireAuthDocsDidRkeyImport } from './routes/_requireAuth/docs/$did.$rkey'

// Create/Update Routes

const ServerRoute = ServerImport.update({
  id: '/server',
  path: '/server',
  getParentRoute: () => rootRoute,
} as any)

const OauthLoginRoute = OauthLoginImport.update({
  id: '/oauth-login',
  path: '/oauth-login',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppStoreRoute = AppStoreImport.update({
  id: '/app-store',
  path: '/app-store',
  getParentRoute: () => rootRoute,
} as any)

const AddUserRoute = AddUserImport.update({
  id: '/add-user',
  path: '/add-user',
  getParentRoute: () => rootRoute,
} as any)

const RequireAuthRoute = RequireAuthImport.update({
  id: '/_requireAuth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RequireAuthPermissionsRoute = RequireAuthPermissionsImport.update({
  id: '/permissions',
  path: '/permissions',
  getParentRoute: () => RequireAuthRoute,
} as any)

const RequireAuthDocsRoute = RequireAuthDocsImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => RequireAuthRoute,
} as any)

const RequireAuthPriviTestIndexRoute = RequireAuthPriviTestIndexImport.update({
  id: '/privi-test/',
  path: '/privi-test/',
  getParentRoute: () => RequireAuthRoute,
} as any)

const RequireAuthPermissionsIndexRoute =
  RequireAuthPermissionsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => RequireAuthPermissionsRoute,
  } as any)

const RequireAuthDocsIndexRoute = RequireAuthDocsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RequireAuthDocsRoute,
} as any)

const RequireAuthPriviTestViewRoute = RequireAuthPriviTestViewImport.update({
  id: '/privi-test/view',
  path: '/privi-test/view',
  getParentRoute: () => RequireAuthRoute,
} as any)

const RequireAuthPermissionsPeopleRoute =
  RequireAuthPermissionsPeopleImport.update({
    id: '/people',
    path: '/people',
    getParentRoute: () => RequireAuthPermissionsRoute,
  } as any)

const RequireAuthPermissionsLexiconsRoute =
  RequireAuthPermissionsLexiconsImport.update({
    id: '/lexicons',
    path: '/lexicons',
    getParentRoute: () => RequireAuthPermissionsRoute,
  } as any)

const RequireAuthPermissionsLexiconsIndexRoute =
  RequireAuthPermissionsLexiconsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => RequireAuthPermissionsLexiconsRoute,
  } as any)

const RequireAuthPermissionsGroupsIndexRoute =
  RequireAuthPermissionsGroupsIndexImport.update({
    id: '/groups/',
    path: '/groups/',
    getParentRoute: () => RequireAuthPermissionsRoute,
  } as any)

const RequireAuthPermissionsLexiconsLexiconIdRoute =
  RequireAuthPermissionsLexiconsLexiconIdImport.update({
    id: '/$lexiconId',
    path: '/$lexiconId',
    getParentRoute: () => RequireAuthPermissionsLexiconsRoute,
  } as any)

const RequireAuthDocsDidRkeyRoute = RequireAuthDocsDidRkeyImport.update({
  id: '/$did/$rkey',
  path: '/$did/$rkey',
  getParentRoute: () => RequireAuthDocsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_requireAuth': {
      id: '/_requireAuth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof RequireAuthImport
      parentRoute: typeof rootRoute
    }
    '/add-user': {
      id: '/add-user'
      path: '/add-user'
      fullPath: '/add-user'
      preLoaderRoute: typeof AddUserImport
      parentRoute: typeof rootRoute
    }
    '/app-store': {
      id: '/app-store'
      path: '/app-store'
      fullPath: '/app-store'
      preLoaderRoute: typeof AppStoreImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/oauth-login': {
      id: '/oauth-login'
      path: '/oauth-login'
      fullPath: '/oauth-login'
      preLoaderRoute: typeof OauthLoginImport
      parentRoute: typeof rootRoute
    }
    '/server': {
      id: '/server'
      path: '/server'
      fullPath: '/server'
      preLoaderRoute: typeof ServerImport
      parentRoute: typeof rootRoute
    }
    '/_requireAuth/docs': {
      id: '/_requireAuth/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof RequireAuthDocsImport
      parentRoute: typeof RequireAuthImport
    }
    '/_requireAuth/permissions': {
      id: '/_requireAuth/permissions'
      path: '/permissions'
      fullPath: '/permissions'
      preLoaderRoute: typeof RequireAuthPermissionsImport
      parentRoute: typeof RequireAuthImport
    }
    '/_requireAuth/permissions/lexicons': {
      id: '/_requireAuth/permissions/lexicons'
      path: '/lexicons'
      fullPath: '/permissions/lexicons'
      preLoaderRoute: typeof RequireAuthPermissionsLexiconsImport
      parentRoute: typeof RequireAuthPermissionsImport
    }
    '/_requireAuth/permissions/people': {
      id: '/_requireAuth/permissions/people'
      path: '/people'
      fullPath: '/permissions/people'
      preLoaderRoute: typeof RequireAuthPermissionsPeopleImport
      parentRoute: typeof RequireAuthPermissionsImport
    }
    '/_requireAuth/privi-test/view': {
      id: '/_requireAuth/privi-test/view'
      path: '/privi-test/view'
      fullPath: '/privi-test/view'
      preLoaderRoute: typeof RequireAuthPriviTestViewImport
      parentRoute: typeof RequireAuthImport
    }
    '/_requireAuth/docs/': {
      id: '/_requireAuth/docs/'
      path: '/'
      fullPath: '/docs/'
      preLoaderRoute: typeof RequireAuthDocsIndexImport
      parentRoute: typeof RequireAuthDocsImport
    }
    '/_requireAuth/permissions/': {
      id: '/_requireAuth/permissions/'
      path: '/'
      fullPath: '/permissions/'
      preLoaderRoute: typeof RequireAuthPermissionsIndexImport
      parentRoute: typeof RequireAuthPermissionsImport
    }
    '/_requireAuth/privi-test/': {
      id: '/_requireAuth/privi-test/'
      path: '/privi-test'
      fullPath: '/privi-test'
      preLoaderRoute: typeof RequireAuthPriviTestIndexImport
      parentRoute: typeof RequireAuthImport
    }
    '/_requireAuth/docs/$did/$rkey': {
      id: '/_requireAuth/docs/$did/$rkey'
      path: '/$did/$rkey'
      fullPath: '/docs/$did/$rkey'
      preLoaderRoute: typeof RequireAuthDocsDidRkeyImport
      parentRoute: typeof RequireAuthDocsImport
    }
    '/_requireAuth/permissions/lexicons/$lexiconId': {
      id: '/_requireAuth/permissions/lexicons/$lexiconId'
      path: '/$lexiconId'
      fullPath: '/permissions/lexicons/$lexiconId'
      preLoaderRoute: typeof RequireAuthPermissionsLexiconsLexiconIdImport
      parentRoute: typeof RequireAuthPermissionsLexiconsImport
    }
    '/_requireAuth/permissions/groups/': {
      id: '/_requireAuth/permissions/groups/'
      path: '/groups'
      fullPath: '/permissions/groups'
      preLoaderRoute: typeof RequireAuthPermissionsGroupsIndexImport
      parentRoute: typeof RequireAuthPermissionsImport
    }
    '/_requireAuth/permissions/lexicons/': {
      id: '/_requireAuth/permissions/lexicons/'
      path: '/'
      fullPath: '/permissions/lexicons/'
      preLoaderRoute: typeof RequireAuthPermissionsLexiconsIndexImport
      parentRoute: typeof RequireAuthPermissionsLexiconsImport
    }
  }
}

// Create and export the route tree

interface RequireAuthDocsRouteChildren {
  RequireAuthDocsIndexRoute: typeof RequireAuthDocsIndexRoute
  RequireAuthDocsDidRkeyRoute: typeof RequireAuthDocsDidRkeyRoute
}

const RequireAuthDocsRouteChildren: RequireAuthDocsRouteChildren = {
  RequireAuthDocsIndexRoute: RequireAuthDocsIndexRoute,
  RequireAuthDocsDidRkeyRoute: RequireAuthDocsDidRkeyRoute,
}

const RequireAuthDocsRouteWithChildren = RequireAuthDocsRoute._addFileChildren(
  RequireAuthDocsRouteChildren,
)

interface RequireAuthPermissionsLexiconsRouteChildren {
  RequireAuthPermissionsLexiconsLexiconIdRoute: typeof RequireAuthPermissionsLexiconsLexiconIdRoute
  RequireAuthPermissionsLexiconsIndexRoute: typeof RequireAuthPermissionsLexiconsIndexRoute
}

const RequireAuthPermissionsLexiconsRouteChildren: RequireAuthPermissionsLexiconsRouteChildren =
  {
    RequireAuthPermissionsLexiconsLexiconIdRoute:
      RequireAuthPermissionsLexiconsLexiconIdRoute,
    RequireAuthPermissionsLexiconsIndexRoute:
      RequireAuthPermissionsLexiconsIndexRoute,
  }

const RequireAuthPermissionsLexiconsRouteWithChildren =
  RequireAuthPermissionsLexiconsRoute._addFileChildren(
    RequireAuthPermissionsLexiconsRouteChildren,
  )

interface RequireAuthPermissionsRouteChildren {
  RequireAuthPermissionsLexiconsRoute: typeof RequireAuthPermissionsLexiconsRouteWithChildren
  RequireAuthPermissionsPeopleRoute: typeof RequireAuthPermissionsPeopleRoute
  RequireAuthPermissionsIndexRoute: typeof RequireAuthPermissionsIndexRoute
  RequireAuthPermissionsGroupsIndexRoute: typeof RequireAuthPermissionsGroupsIndexRoute
}

const RequireAuthPermissionsRouteChildren: RequireAuthPermissionsRouteChildren =
  {
    RequireAuthPermissionsLexiconsRoute:
      RequireAuthPermissionsLexiconsRouteWithChildren,
    RequireAuthPermissionsPeopleRoute: RequireAuthPermissionsPeopleRoute,
    RequireAuthPermissionsIndexRoute: RequireAuthPermissionsIndexRoute,
    RequireAuthPermissionsGroupsIndexRoute:
      RequireAuthPermissionsGroupsIndexRoute,
  }

const RequireAuthPermissionsRouteWithChildren =
  RequireAuthPermissionsRoute._addFileChildren(
    RequireAuthPermissionsRouteChildren,
  )

interface RequireAuthRouteChildren {
  RequireAuthDocsRoute: typeof RequireAuthDocsRouteWithChildren
  RequireAuthPermissionsRoute: typeof RequireAuthPermissionsRouteWithChildren
  RequireAuthPriviTestViewRoute: typeof RequireAuthPriviTestViewRoute
  RequireAuthPriviTestIndexRoute: typeof RequireAuthPriviTestIndexRoute
}

const RequireAuthRouteChildren: RequireAuthRouteChildren = {
  RequireAuthDocsRoute: RequireAuthDocsRouteWithChildren,
  RequireAuthPermissionsRoute: RequireAuthPermissionsRouteWithChildren,
  RequireAuthPriviTestViewRoute: RequireAuthPriviTestViewRoute,
  RequireAuthPriviTestIndexRoute: RequireAuthPriviTestIndexRoute,
}

const RequireAuthRouteWithChildren = RequireAuthRoute._addFileChildren(
  RequireAuthRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof RequireAuthRouteWithChildren
  '/add-user': typeof AddUserRoute
  '/app-store': typeof AppStoreRoute
  '/login': typeof LoginRoute
  '/oauth-login': typeof OauthLoginRoute
  '/server': typeof ServerRoute
  '/docs': typeof RequireAuthDocsRouteWithChildren
  '/permissions': typeof RequireAuthPermissionsRouteWithChildren
  '/permissions/lexicons': typeof RequireAuthPermissionsLexiconsRouteWithChildren
  '/permissions/people': typeof RequireAuthPermissionsPeopleRoute
  '/privi-test/view': typeof RequireAuthPriviTestViewRoute
  '/docs/': typeof RequireAuthDocsIndexRoute
  '/permissions/': typeof RequireAuthPermissionsIndexRoute
  '/privi-test': typeof RequireAuthPriviTestIndexRoute
  '/docs/$did/$rkey': typeof RequireAuthDocsDidRkeyRoute
  '/permissions/lexicons/$lexiconId': typeof RequireAuthPermissionsLexiconsLexiconIdRoute
  '/permissions/groups': typeof RequireAuthPermissionsGroupsIndexRoute
  '/permissions/lexicons/': typeof RequireAuthPermissionsLexiconsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof RequireAuthRouteWithChildren
  '/add-user': typeof AddUserRoute
  '/app-store': typeof AppStoreRoute
  '/login': typeof LoginRoute
  '/oauth-login': typeof OauthLoginRoute
  '/server': typeof ServerRoute
  '/permissions/people': typeof RequireAuthPermissionsPeopleRoute
  '/privi-test/view': typeof RequireAuthPriviTestViewRoute
  '/docs': typeof RequireAuthDocsIndexRoute
  '/permissions': typeof RequireAuthPermissionsIndexRoute
  '/privi-test': typeof RequireAuthPriviTestIndexRoute
  '/docs/$did/$rkey': typeof RequireAuthDocsDidRkeyRoute
  '/permissions/lexicons/$lexiconId': typeof RequireAuthPermissionsLexiconsLexiconIdRoute
  '/permissions/groups': typeof RequireAuthPermissionsGroupsIndexRoute
  '/permissions/lexicons': typeof RequireAuthPermissionsLexiconsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_requireAuth': typeof RequireAuthRouteWithChildren
  '/add-user': typeof AddUserRoute
  '/app-store': typeof AppStoreRoute
  '/login': typeof LoginRoute
  '/oauth-login': typeof OauthLoginRoute
  '/server': typeof ServerRoute
  '/_requireAuth/docs': typeof RequireAuthDocsRouteWithChildren
  '/_requireAuth/permissions': typeof RequireAuthPermissionsRouteWithChildren
  '/_requireAuth/permissions/lexicons': typeof RequireAuthPermissionsLexiconsRouteWithChildren
  '/_requireAuth/permissions/people': typeof RequireAuthPermissionsPeopleRoute
  '/_requireAuth/privi-test/view': typeof RequireAuthPriviTestViewRoute
  '/_requireAuth/docs/': typeof RequireAuthDocsIndexRoute
  '/_requireAuth/permissions/': typeof RequireAuthPermissionsIndexRoute
  '/_requireAuth/privi-test/': typeof RequireAuthPriviTestIndexRoute
  '/_requireAuth/docs/$did/$rkey': typeof RequireAuthDocsDidRkeyRoute
  '/_requireAuth/permissions/lexicons/$lexiconId': typeof RequireAuthPermissionsLexiconsLexiconIdRoute
  '/_requireAuth/permissions/groups/': typeof RequireAuthPermissionsGroupsIndexRoute
  '/_requireAuth/permissions/lexicons/': typeof RequireAuthPermissionsLexiconsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/add-user'
    | '/app-store'
    | '/login'
    | '/oauth-login'
    | '/server'
    | '/docs'
    | '/permissions'
    | '/permissions/lexicons'
    | '/permissions/people'
    | '/privi-test/view'
    | '/docs/'
    | '/permissions/'
    | '/privi-test'
    | '/docs/$did/$rkey'
    | '/permissions/lexicons/$lexiconId'
    | '/permissions/groups'
    | '/permissions/lexicons/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/add-user'
    | '/app-store'
    | '/login'
    | '/oauth-login'
    | '/server'
    | '/permissions/people'
    | '/privi-test/view'
    | '/docs'
    | '/permissions'
    | '/privi-test'
    | '/docs/$did/$rkey'
    | '/permissions/lexicons/$lexiconId'
    | '/permissions/groups'
    | '/permissions/lexicons'
  id:
    | '__root__'
    | '/'
    | '/_requireAuth'
    | '/add-user'
    | '/app-store'
    | '/login'
    | '/oauth-login'
    | '/server'
    | '/_requireAuth/docs'
    | '/_requireAuth/permissions'
    | '/_requireAuth/permissions/lexicons'
    | '/_requireAuth/permissions/people'
    | '/_requireAuth/privi-test/view'
    | '/_requireAuth/docs/'
    | '/_requireAuth/permissions/'
    | '/_requireAuth/privi-test/'
    | '/_requireAuth/docs/$did/$rkey'
    | '/_requireAuth/permissions/lexicons/$lexiconId'
    | '/_requireAuth/permissions/groups/'
    | '/_requireAuth/permissions/lexicons/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RequireAuthRoute: typeof RequireAuthRouteWithChildren
  AddUserRoute: typeof AddUserRoute
  AppStoreRoute: typeof AppStoreRoute
  LoginRoute: typeof LoginRoute
  OauthLoginRoute: typeof OauthLoginRoute
  ServerRoute: typeof ServerRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RequireAuthRoute: RequireAuthRouteWithChildren,
  AddUserRoute: AddUserRoute,
  AppStoreRoute: AppStoreRoute,
  LoginRoute: LoginRoute,
  OauthLoginRoute: OauthLoginRoute,
  ServerRoute: ServerRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_requireAuth",
        "/add-user",
        "/app-store",
        "/login",
        "/oauth-login",
        "/server"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_requireAuth": {
      "filePath": "_requireAuth.tsx",
      "children": [
        "/_requireAuth/docs",
        "/_requireAuth/permissions",
        "/_requireAuth/privi-test/view",
        "/_requireAuth/privi-test/"
      ]
    },
    "/add-user": {
      "filePath": "add-user.tsx"
    },
    "/app-store": {
      "filePath": "app-store.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/oauth-login": {
      "filePath": "oauth-login.tsx"
    },
    "/server": {
      "filePath": "server.tsx"
    },
    "/_requireAuth/docs": {
      "filePath": "_requireAuth/docs.tsx",
      "parent": "/_requireAuth",
      "children": [
        "/_requireAuth/docs/",
        "/_requireAuth/docs/$did/$rkey"
      ]
    },
    "/_requireAuth/permissions": {
      "filePath": "_requireAuth/permissions.tsx",
      "parent": "/_requireAuth",
      "children": [
        "/_requireAuth/permissions/lexicons",
        "/_requireAuth/permissions/people",
        "/_requireAuth/permissions/",
        "/_requireAuth/permissions/groups/"
      ]
    },
    "/_requireAuth/permissions/lexicons": {
      "filePath": "_requireAuth/permissions/lexicons.tsx",
      "parent": "/_requireAuth/permissions",
      "children": [
        "/_requireAuth/permissions/lexicons/$lexiconId",
        "/_requireAuth/permissions/lexicons/"
      ]
    },
    "/_requireAuth/permissions/people": {
      "filePath": "_requireAuth/permissions/people.tsx",
      "parent": "/_requireAuth/permissions"
    },
    "/_requireAuth/privi-test/view": {
      "filePath": "_requireAuth/privi-test/view.tsx",
      "parent": "/_requireAuth"
    },
    "/_requireAuth/docs/": {
      "filePath": "_requireAuth/docs/index.tsx",
      "parent": "/_requireAuth/docs"
    },
    "/_requireAuth/permissions/": {
      "filePath": "_requireAuth/permissions/index.tsx",
      "parent": "/_requireAuth/permissions"
    },
    "/_requireAuth/privi-test/": {
      "filePath": "_requireAuth/privi-test/index.tsx",
      "parent": "/_requireAuth"
    },
    "/_requireAuth/docs/$did/$rkey": {
      "filePath": "_requireAuth/docs/$did.$rkey.tsx",
      "parent": "/_requireAuth/docs"
    },
    "/_requireAuth/permissions/lexicons/$lexiconId": {
      "filePath": "_requireAuth/permissions/lexicons/$lexiconId.tsx",
      "parent": "/_requireAuth/permissions/lexicons"
    },
    "/_requireAuth/permissions/groups/": {
      "filePath": "_requireAuth/permissions/groups/index.tsx",
      "parent": "/_requireAuth/permissions"
    },
    "/_requireAuth/permissions/lexicons/": {
      "filePath": "_requireAuth/permissions/lexicons/index.tsx",
      "parent": "/_requireAuth/permissions/lexicons"
    }
  }
}
ROUTE_MANIFEST_END */
