[request_definition]
 # sub(ject) = did, own(er) = did, obj(ect) = nsid.rkey
r = sub, own, obj

[policy_definition]
# sub(ject) = did or group, own(er) = did, obj(ect) = nsid.rkey, ef(fec)t = allow | deny
p = sub, own, obj, eft 

[role_definition]
# roles are defined by pairs: (inheritor, parent)
g = _, _ 

[policy_effect]
# one matching policy must allow
# no matching policy must deny
e = some(where (p.eft == allow)) \
&& !some(where (p.eft == deny)) 

[matchers]
# req subject must inherit from policy subject
# req owner must match policy owner
# req action must match policy action
# req object must glob match policy object
m = g(r.sub, p.sub) && r.own == p.own && keyMatch(r.obj, p.obj)
