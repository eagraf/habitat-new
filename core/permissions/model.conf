[request_definition]
 # sub(ject) = did, obj(ect) = nsid.rkey, act(ion) = read | write
r = sub, obj, act

[policy_definition]
# ef(fec)t = allow | deny
p = sub, obj, act, eft 

[role_definition]
# roles are defined by pairs: (inheritor, parent)
g = _, _ 

[policy_effect]
# one matching policy must allow
# no matching policy must deny
e = some(where (p.eft == allow)) \
&& !some(where (p.eft == deny)) 

[matchers]
# req subject must inherit from policy subject
# req action must match policy action
# req object must glob match policy object
m = g(r.sub, p.sub) \ 
&& r.act == p.act && \ 
keyMatch(r.obj, p.obj)
